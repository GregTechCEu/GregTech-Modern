configurations {
    includedLibrary {
        canBeConsumed = false
        canBeResolved = true
    }
}

shadowJar {
    from jar.outputs
    configurations = [project.configurations.includedLibrary]
    archiveClassifier = "dev"
}

slimJar {
    from sourceSets.main.output
    configurations = [project.configurations.includedLibrary]
    archiveClassifier = "dev-slim"
}

obfuscation {
    reobfuscate(tasks.named('slimJar'), sourceSets.main) {
        archiveClassifier = "slim"
    }
    reobfuscate(tasks.named('shadowJar'), sourceSets.main) {
        archiveClassifier = null
        archiveClassifier.convention(null)
    }
}

jar {
    archiveClassifier = "dev-no-shadow"
    archiveClassifier.convention("dev-no-shadow")
    enabled = false
}

reobfJar {
    archiveClassifier = "no-shadow"
    enabled = false
}

tasks.register('sourcesJar', Jar) {
    from delombok.outputs.files
    dependsOn delombok
    archiveClassifier = "sources"
}

base {
    archivesName = "${project.name}-${libs.versions.minecraft.get()}"
}

afterEvaluate {
    tasks.withType(org.gradle.jvm.tasks.Jar).configureEach {
        exclude ".cache/*"

        manifest.attributes([
                'MixinConfigs': 'gtceu.mixins.json',
                'Specification-Title': project.name,
                'Specification-Version': mod_version,
                'Specification-Vendor': 'GregTechCEu Team',
                'Implementation-Title': base.archivesName,
                'Implementation-Version': version,
                'Implementation-Vendor': 'GregTechCEu Team',
        ])
    }
}
