String getConfig(String key) {
    return project.properties.get(key)
}

def mod_id = getConfig("mod_id")
def version = getConfig("version")
def mod_license = getConfig("mod_license")
def mod_name = getConfig("mod_name")
def mod_description = getConfig("mod_description")
def mod_url = getConfig("mod_url")
def mod_issue_tracker = getConfig("mod_issue_tracker")
def loader_version = getConfig("loader_version")

tasks.withType(ProcessResources).configureEach {
    var forgeVers = forge.versions.forgeShortVersion.get().split("\\.")
    var replaceProperties = [
            version             : version,
            mod_id              : mod_id,
            minecraft_version   : libs.versions.minecraft.get(),
            loader_version      : loader_version,
            forge_version       : forgeVers[0] + "." + forgeVers[1], // only specify major version of forge
            configuration_version: "2.3.1",
            kjs_version         : forge.versions.kubejs.get().split("\\.")[0], // only specify major version of kjs
            ldlib_version       : forge.versions.ldlib.get(),
            jei_version         : forge.versions.jei.get(),
            emi_version         : forge.versions.emi.get(),
            top_version         : forge.versions.theoneprobe.get(),
            jade_version        : "15.1.8",
            mod_license         : mod_license,
            mod_name            : mod_name,
            mod_description     : mod_description,
            mod_url             : mod_url,
            mod_issue_tracker   : mod_issue_tracker
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties + [project: project]
    }
}
