import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    alias libs.plugins.modDevGradle
    alias libs.plugins.machete // automatic jar compressing on build
    alias libs.plugins.shadow
    alias libs.plugins.spotless
    alias libs.plugins.lombok
}

group = maven_group

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

// Formats the mod version to include the loader, Minecraft version, build number (if present), and '-SNAPSHOT-<timestamp>' if enabled.
boolean isSnapshot = System.getenv("SNAPSHOT")
version = "${mod_version}" + (isSnapshot ? "-SNAPSHOT" : "")

tasks.register('slimJar', ShadowJar) {
    from sourceSets.main.output
}

final refmapFile = mixin.add sourceSets.main, "gtceu.refmap.json"

apply from: "$rootDir/gradle/scripts/moddevgradle.gradle"
apply from: "$rootDir/gradle/scripts/repositories.gradle"
apply from: "$rootDir/gradle/scripts/jars.gradle"
apply from: "$rootDir/dependencies.gradle"
apply from: "$rootDir/gradle/scripts/resources.gradle"
apply from: "$rootDir/gradle/scripts/publishing.gradle"
apply from: "$rootDir/gradle/scripts/spotless.gradle"

afterEvaluate {
    tasks.withType(ShadowJar).configureEach {
        from(refmapFile)
        configurations = [project.configurations.includedLibrary]
        minimize()
        relocate("org.jgrapht", "${maven_group}.repack.org.jgrapht")
        relocate("org.jheaps", "${maven_group}.repack.org.jheaps")
        relocate("org.apfloat", "${maven_group}.repack.org.apfloat")
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

machete {
    // disable machete locally for faster builds
    enabled = false
}

lombok {
    version = "1.18.32"
}
