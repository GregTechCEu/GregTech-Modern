architectury {
    common(rootProject.enabled_platforms.split(","))
}

String getConfig(String key) {
    return project.getParent().properties.get(key)
}

def mod_id = getConfig("mod_id")

loom {
    accessWidenerPath = file("src/main/resources/${mod_id}.accesswidener")
}

repositories {
    // mavens for Create Fabric and dependencies
    maven { url = "https://api.modrinth.com/maven" } // LazyDFU
    maven { url = "https://maven.terraformersmc.com/releases/" } // Mod Menu
    maven { url = "https://mvn.devos.one/snapshots/" } // Create Fabric, Porting Lib, Forge Tags, Milk Lib, Registrate Fabric
    maven { url = "https://cursemaven.com" } // Forge Config API Port
    maven { url = "https://maven.cafeteria.dev/releases" } // Fake Player API
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
    maven { url = "https://jitpack.io/" } // Mixin Extras, Fabric ASM
}

configurations {
//    snapshotModImplementation.extendsFrom modImplementation
//    snapshotModImplementation {
//        resolutionStrategy.cacheChangingModulesFor(0, "seconds")
//    }
}

//configurations.all {
//    resolutionStrategy.cacheChangingModulesFor(0, "seconds")
//    resolutionStrategy.cacheDynamicVersionsFor(0, "seconds")
//}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation fabric.fabricLoader
    modCompileOnly fabric.fabricApi

    // Compile against Create Fabric in common
    // beware of differences across platforms!
    // dependencies must also be pulled in to minimize problems, from remapping issues to compile errors.
    // All dependencies except Flywheel and Registrate are NOT safe to use!
    // Flywheel and Registrate must also be used carefully due to differences.
    modCompileOnly fabric.createFabric
    modImplementation fabric.ldlib.common { transitive = false }

    // JEI
    modCompileOnly fabric.jei.common.api
    modCompileOnly fabric.jei.fabric.api
    modCompileOnly fabric.jei.fabric.impl

    // REI
    modCompileOnly fabric.rei.plugin
    modCompileOnly fabric.rei.api
    modCompileOnly fabric.rei.fabric

    // TOP
    modCompileOnly fabric.theoneprobe
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.mod_id
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
