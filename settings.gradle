pluginManagement {
    repositories {
        maven { url = "https://maven.fabricmc.net/" }
        maven { url = "https://maven.architectury.dev/" }
        maven { url = "https://maven.minecraftforge.net/" }
        maven { url = "https://maven.quiltmc.org/repository/release" }
        gradlePluginPortal()
    }
}

dependencyResolutionManagement {
    repositories {
        mavenCentral()
    }
    versionCatalogs {
        // Minecraft Version
        def minecraftVersion = "1.19.2"

        // Mod Dependencies Versions
        // Common
        def jeiVersion = "11.5.2.1007"
        def reiVersion = "9.1.619"
        def emiVersion = "1.0.5+1.19.2"
        def ae2Version = "12.9.5"
        def kjsVersion = "1902.6.1-build.307"
        def auVersion = "1.19.2-0.6.0"

        // Forge
        def forgeVersion = "43.2.19"
        def registrateForgeVersion = "MC1.19-1.1.5"
        def createForgeVersion = "0.5.1.b-30"
        def flywheelForgeVersion = "0.6.8.a-14"
        def topForgeVersion = "1.19-6.2.0-6"
        def jadeForgeVersion = "8.8.1"
        def configurationForgeFile = "4519560"
        def worldStripperForgeFile = "3921630"

        // Libs
        def quiltMappingsVersion = "21"  // https://lambdaurora.dev/tools/import_quilt.html
        def parchmentVersion = "2022.11.27" // https://parchmentmc.org/docs/getting-started
        def shadowVersion = "7.1.2"
        def architecturyPluginVersion = "3.4-SNAPSHOT"
        def architecturyLoomVersion = "1.5-SNAPSHOT"
        def macheteVersion = "1.+"
        def ldLibVersion = "1.0.25.d"
        def mixinextrasVersion = "0.2.0"

        forge {
            version("forgeShortVersion", forgeVersion)
            def minecraftForge = version("minecratfForge", "${minecraftVersion}-${forgeVersion}")
            library("minecraftForge", "net.minecraftforge", "forge").versionRef(minecraftForge)

            def ldLib = version("ldlib", ldLibVersion)
            library("ldlib-forge", "com.lowdragmc.ldlib", "ldlib-forge-${minecraftVersion}").versionRef(ldLib)

            def registrate = version("registrate", registrateForgeVersion)
            library("registrate", "com.tterrag.registrate", "Registrate").versionRef(registrate)

            def createForge = version("createForge", createForgeVersion)
            library("createForge", "com.simibubi.create", "create-${minecraftVersion}").versionRef(createForge)

            def flywheel = version("flywheel", flywheelForgeVersion)
            library("flywheel", "com.jozufozu.flywheel", "flywheel-forge-${minecraftVersion}").versionRef(flywheel)

            def jei = version("jei", jeiVersion)
            library("jei-common-api", "mezz.jei", "jei-${minecraftVersion}-common-api").versionRef(jei)
            library("jei-forge-api", "mezz.jei", "jei-${minecraftVersion}-forge-api").versionRef(jei)
            library("jei-forge-impl", "mezz.jei", "jei-${minecraftVersion}-forge").versionRef(jei)

            def rei = version("rei", reiVersion)
            library("rei-plugin", "me.shedaniel", "RoughlyEnoughItems-default-plugin-forge").versionRef(rei)
            library("rei-api", "me.shedaniel", "RoughlyEnoughItems-api-forge").versionRef(rei)
            library("rei-forge", "me.shedaniel", "RoughlyEnoughItems-forge").versionRef(rei)

            def emi = version("emi", emiVersion)
            library("emi", "dev.emi", "emi-forge").versionRef(emi)

            def theoneprobe = version("theoneprobe", topForgeVersion)
            library("theoneprobe", "mcjty.theoneprobe", "theoneprobe").versionRef(theoneprobe)

            def jade = version("jade", jadeForgeVersion)
            library("jade", "maven.modrinth", "jade").versionRef(jade)

            def kubejs = version("kubejs", kjsVersion)
            library("kubejs", "dev.latvian.mods", "kubejs-forge").versionRef(kubejs)

            def mixinextras = version("mixinextras", mixinextrasVersion)
            library("mixinextras-forge", "io.github.llamalad7", "mixinextras-forge").versionRef(mixinextras)

            def configuration = version("configuration", configurationForgeFile)
            library("configuration", "curse.maven", "configuration-444699").versionRef(configuration)

            def worldStripper = version("worldStripper", worldStripperForgeFile)
            library("worldStripper", "curse.maven", "worldStripper-250603").versionRef(worldStripper)

            def ae2 = version("ae2", ae2Version)
            library("ae2", "appeng", "appliedenergistics2-forge").versionRef(ae2)

            def au = version("au", auVersion)
            library("almostUnified-forge", "com.almostreliable.mods", "almostunified-forge").versionRef(au)
        }

        libs {
            version("quiltMappings", quiltMappingsVersion)
            version("parchment", parchmentVersion)

            def minecraft = version("minecraft", minecraftVersion)
            library("minecraft", "com.mojang", "minecraft").versionRef(minecraft)

            def shadow = version("shadow", shadowVersion)
            plugin("shadow", "com.github.johnrengelman.shadow").versionRef(shadow)

            def architecturyPlugin = version("architectury", architecturyPluginVersion)
            plugin("architectury", "architectury-plugin").versionRef(architecturyPlugin)

            def architecturyLoom = version("architectury-loom", architecturyLoomVersion)
            plugin("architectury-loom", "dev.architectury.loom").versionRef(architecturyLoom)

            def machete = version("machete", macheteVersion)
            plugin("machete", "io.github.p03w.machete").versionRef(machete)
        }
    }
}

rootProject.name = "${mod_id}"
