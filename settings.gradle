pluginManagement {
    repositories {
        maven { url = "https://maven.fabricmc.net/" }
        maven { url = "https://maven.architectury.dev/" }
        maven { url = "https://maven.minecraftforge.net/" }
        maven { url = "https://maven.quiltmc.org/repository/release" }
        gradlePluginPortal()
    }
}

dependencyResolutionManagement {
    repositories {
        mavenCentral()
    }
    versionCatalogs {
        // Minecraft Version
        def minecraftVersion = "1.20.1"

        // Mod Dependencies Versions
        // Common
        def jeiVersion = "15.2.0.23"
        def reiVersion = "12.0.625"
        def emiVersion = "1.0.5+1.20.1"
        def ae2Version = "15.0.4-beta"
        def kjsVersion = "2001.6.3-build.37"
        def auVersion = "1.20.1-0.6.0"

        // Fabric
        def fabricLoaderVersion = "0.14.21" // https://fabricmc.net/develop/
        def fabricApiVersion = "0.83.0" // https://fabricmc.net/develop/
        def createVersion = "0.5.1-d-build.1161"
        def lazyDfuVersion = "0.1.3"
        def modMenuVersion = "7.1.0"
//        def topFabricVersion = "1.19-6.0.0"
        def jadeFabricVersion = "11.2.2"
        def registrateFabricVersion = "1.3.62-MC1.20.1"
        def forgeConfigApiVersion = "8.0.0"
        def nightConfigVersion = "3.6.5"
        def teamRebornEnergyVersion = "2.3.0"
        def worldStripperFabricFile = "4578576"

        // Forge
        def forgeVersion = "47.1.3"
        def registrateForgeVersion = "MC1.20-1.3.3"
        def createForgeVersion = "0.5.1.d-9"
        def flywheelForgeVersion = "0.6.9-5"
        def topForgeVersion = "1.20.1-10.0.1-3"
        def jadeForgeVersion = "11.1.4"
        def worldStripperForgeFile = "4578579"

        // Libs
        def quiltMappingsVersion = "5"  // https://lambdaurora.dev/tools/import_quilt.html
        def parchmentVersion = "2023.06.25" // https://parchmentmc.org/docs/getting-started
        def shadowVersion = "7.1.2"
        def architecturyPluginVersion = "3.4-SNAPSHOT"
        def architecturyLoomVersion = "1.3-SNAPSHOT"
        def vineFlowerVersion = "1.+"
        def macheteVersion = "1.+"
        def configurationVersion = "2.2.0"
        def ldLibVersion = "1.0.20.a"
        def mixinextrasVersion = "0.2.0-rc.5"

        fabric {
            def fabricLoader = version("fabricLoader", fabricLoaderVersion)
            library("fabricLoader", "net.fabricmc", "fabric-loader").versionRef(fabricLoader)

            def fabricApi = version("fabricApi", "${fabricApiVersion}+${minecraftVersion}")
            library("fabricApi", "net.fabricmc.fabric-api", "fabric-api").versionRef(fabricApi)

            def ldLib = version("ldlib", ldLibVersion)
            library("ldlib-common", "com.lowdragmc.ldlib", "ldlib-common-${minecraftVersion}").versionRef(ldLib)
            library("ldlib-fabric", "com.lowdragmc.ldlib", "ldlib-fabric-${minecraftVersion}").versionRef(ldLib)

            def registrate = version("registrate", registrateFabricVersion)
            library("registrate", "com.tterrag.registrate_fabric", "Registrate").versionRef(registrate)

            def createFabric = version("create-fabric", "${createVersion}+mc${minecraftVersion}")
            library("createFabric", "com.simibubi.create", "create-fabric-${minecraftVersion}").versionRef(createFabric)

            def lazyDfu = version("lazydfu", lazyDfuVersion)
            library("lazydfu", "maven.modrinth", "lazydfu").versionRef(lazyDfu)

            def modMenu = version("modmenu", modMenuVersion)
            library("modmenu", "com.terraformersmc", "modmenu").versionRef(modMenu)

            def jei = version("jei", jeiVersion)
            library("jei-common-api", "mezz.jei", "jei-${minecraftVersion}-common-api").versionRef(jei)
            library("jei-fabric-api", "mezz.jei", "jei-${minecraftVersion}-fabric-api").versionRef(jei)
            library("jei-fabric-impl", "mezz.jei", "jei-${minecraftVersion}-fabric").versionRef(jei)
            bundle("jei", ["jei-common-api", "jei-fabric-api"])

            def rei = version("rei", reiVersion)
            library("rei-plugin", "me.shedaniel", "RoughlyEnoughItems-default-plugin-fabric").versionRef(rei)
            library("rei-api", "me.shedaniel", "RoughlyEnoughItems-api-fabric").versionRef(rei)
            library("rei-fabric", "me.shedaniel", "RoughlyEnoughItems-fabric").versionRef(rei)

            def emi = version("emi", emiVersion)
            library("emi", "dev.emi", "emi-fabric").versionRef(emi)

//            def theoneprobe = version("theoneprobe", topFabricVersion)
//            library("theoneprobe", "mcjty.theoneprobe", "theoneprobe-fabric").versionRef(theoneprobe)

            def jade = version("jade", jadeFabricVersion)
            library("jade", "maven.modrinth", "jade").versionRef(jade)

            def kubejs = version("kubejs", kjsVersion)
            library("kubejs", "dev.latvian.mods", "kubejs-fabric").versionRef(kubejs)

            def forgeConfigApi = version("forgeConfigApi", forgeConfigApiVersion)
            library("forgeConfigApi", "fuzs.forgeconfigapiport", "forgeconfigapiport-fabric").versionRef(forgeConfigApi)
            def nightConfigCore = version("nightConfigCore", nightConfigVersion)
            library("nightConfigCore", "com.electronwill.night-config", "core").versionRef(nightConfigCore)
            def nightConfigToml = version("nightConfigToml", nightConfigVersion)
            library("nightConfigToml", "com.electronwill.night-config", "toml").versionRef(nightConfigToml)

            def teamRebornEnergy = version("teamRebornEnergy", teamRebornEnergyVersion)
            library("teamRebornEnergy", "teamreborn", "energy").versionRef(teamRebornEnergy)

            def configuration = version("configuration", configurationVersion)
            library("configuration", "dev.toma.configuration", "configuration-fabric-1.20.1").versionRef(configuration)

            def worldStripper = version("worldStripper", worldStripperFabricFile)
            library("worldStripper", "curse.maven", "worldStripper-250603").versionRef(worldStripper)

            def ae2 = version("ae2", ae2Version)
            library("ae2", "appeng", "appliedenergistics2-fabric").versionRef(ae2)

            def au = version("au", auVersion)
            library("almostUnified-common", "com.almostreliable.mods", "almostunified-common").versionRef(au)
            library("almostUnified-fabric", "com.almostreliable.mods", "almostunified-fabric").versionRef(au)
        }

        forge {
            version("forgeShortVersion", forgeVersion)
            def minecraftForge = version("minecratfForge", "${minecraftVersion}-${forgeVersion}")
            library("minecraftForge", "net.minecraftforge", "forge").versionRef(minecraftForge)

            def ldLib = version("ldlib", ldLibVersion)
            library("ldlib-forge", "com.lowdragmc.ldlib", "ldlib-forge-${minecraftVersion}").versionRef(ldLib)

            def registrate = version("registrate", registrateForgeVersion)
            library("registrate", "com.tterrag.registrate", "Registrate").versionRef(registrate)

            def createForge = version("createForge", createForgeVersion)
            library("createForge", "com.simibubi.create", "create-${minecraftVersion}").versionRef(createForge)

            def flywheel = version("flywheel", flywheelForgeVersion)
            library("flywheel", "com.jozufozu.flywheel", "flywheel-forge-${minecraftVersion}").versionRef(flywheel)

            def jei = version("jei", jeiVersion)
            library("jei-common-api", "mezz.jei", "jei-${minecraftVersion}-common-api").versionRef(jei)
            library("jei-forge-api", "mezz.jei", "jei-${minecraftVersion}-forge-api").versionRef(jei)
            library("jei-forge-impl", "mezz.jei", "jei-${minecraftVersion}-forge").versionRef(jei)

            def rei = version("rei", reiVersion)
            library("rei-plugin", "me.shedaniel", "RoughlyEnoughItems-default-plugin-forge").versionRef(rei)
            library("rei-api", "me.shedaniel", "RoughlyEnoughItems-api-forge").versionRef(rei)
            library("rei-forge", "me.shedaniel", "RoughlyEnoughItems-forge").versionRef(rei)

            def emi = version("emi", emiVersion)
            library("emi", "dev.emi", "emi-forge").versionRef(emi)

            def theoneprobe = version("theoneprobe", topForgeVersion)
            library("theoneprobe", "mcjty.theoneprobe", "theoneprobe").versionRef(theoneprobe)

            def jade = version("jade", jadeForgeVersion)
            library("jade", "maven.modrinth", "jade").versionRef(jade)

            def kubejs = version("kubejs", kjsVersion)
            library("kubejs", "dev.latvian.mods", "kubejs-forge").versionRef(kubejs)

            def mixinextras = version("mixinextras", mixinextrasVersion)
            library("mixinextras", "io.github.llamalad7", "mixinextras-forge").versionRef(mixinextras)

            def configuration = version("configuration", configurationVersion)
            library("configuration", "dev.toma.configuration", "configuration-forge-1.20.1").versionRef(configuration)

            def worldStripper = version("worldStripper", worldStripperForgeFile)
            library("worldStripper", "curse.maven", "worldStripper-250603").versionRef(worldStripper)

            def ae2 = version("ae2", ae2Version)
            library("ae2", "appeng", "appliedenergistics2-forge").versionRef(ae2)

            def au = version("au", auVersion)
            library("almostUnified-forge", "com.almostreliable.mods", "almostunified-forge").versionRef(au)
        }

        libs {
            version("quiltMappings", quiltMappingsVersion)
            version("parchment", parchmentVersion)

            def minecraft = version("minecraft", minecraftVersion)
            library("minecraft", "com.mojang", "minecraft").versionRef(minecraft)

            def shadow = version("shadow", shadowVersion)
            plugin("shadow", "com.github.johnrengelman.shadow").versionRef(shadow)

            def architecturyPlugin = version("architectury", architecturyPluginVersion)
            plugin("architectury", "architectury-plugin").versionRef(architecturyPlugin)

            def architecturyLoom = version("architectury-loom", architecturyLoomVersion)
            plugin("architectury-loom", "dev.architectury.loom").versionRef(architecturyLoom)

            def vineFlower = version("vineFlower", vineFlowerVersion)
            plugin("vineFlower", "io.github.juuxel.loom-vineflower").versionRef(vineFlower)

            def machete = version("machete", macheteVersion)
            plugin("machete", "io.github.p03w.machete").versionRef(machete)
        }
    }
}

include("${mod_id}-common")
include("${mod_id}-fabric")
include("${mod_id}-forge")

project(":${mod_id}-common").setProjectDir(new File("common"))
project(":${mod_id}-forge").setProjectDir(new File("forge"))
project(":${mod_id}-fabric").setProjectDir(new File("fabric"))

rootProject.name = "${mod_name}"
