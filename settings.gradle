pluginManagement {
    repositories {
        mavenLocal()
        gradlePluginPortal()
        maven { url = 'https://maven.neoforged.net/releases' }
        maven { url = "https://maven.quiltmc.org/repository/release" }
    }
}

plugins {
    id 'org.gradle.toolchains.foojay-resolver-convention' version '0.5.0'
}

dependencyResolutionManagement {
    repositories {
        mavenCentral()
    }
    versionCatalogs {
        // Minecraft Version
        def minecraftVersionVeryOld = "1.20.1"
        def minecraftVersionOld = "1.20.4"
        def minecraftVersionOldish = "1.20.5"
        def minecraftVersion = "1.20.6"

        // Mod Dependencies Versions
        // Common
        def jeiVersion = "17.3.0.49"
        def reiVersion = "15.0.728"
        def emiVersion = "1.1.6"
        def ae2Version = "17.0.6-beta"
        def kjsVersion = "2004.7.0-build.14"
        def auVersion = "1.20.1-0.6.0"

        // NeoForge
        def neoForgeVersion = "20.6.62-beta"
        def registrateForgeVersion = "MC1.20.6-1.3.0"
        def createForgeVersion = "0.5.1.d-9"
        def flywheelForgeVersion = "0.6.9-5"
        def topForgeVersion = "1.20.1-10.0.1-3"
        def jadeForgeVersion = "5109393"
        def worldStripperForgeFile = "4578579"

        // Libs
        def quiltMappingsVersion = "5"  // https://lambdaurora.dev/tools/import_quilt.html
        def parchmentVersion = "2024.04.14" // https://parchmentmc.org/docs/getting-started
        def shadowVersion = "7.1.2"
        def vineFlowerVersion = "1.+"
        def macheteVersion = "1.+"
        def configurationVersion = "2.2.3"
        def ldLibVersion = "1.0.25.g"
        def shimmerVersion = "0.2.2"

        forge {
            version("forgeShortVersion", neoForgeVersion)
            def neoForge = version("neoForge", "${neoForgeVersion}")
            library("neoForge", "net.neoforged", "neoforge").versionRef(neoForge)

            def ldLib = version("ldlib", ldLibVersion)
            library("ldlib-neoforge", "com.lowdragmc.ldlib", "ldlib-neoforge-${minecraftVersion}").versionRef(ldLib)

            def shimmer = version("shimmer", "${minecraftVersionVeryOld}-${shimmerVersion}")
            library("shimmer-forge", "com.lowdragmc.shimmer", "Shimmer-forge").versionRef(shimmer)

            def registrate = version("registrate", registrateForgeVersion)
            library("registrate", "com.tterrag.registrate", "Registrate").versionRef(registrate)

            def createForge = version("createForge", createForgeVersion)
            library("createForge", "com.simibubi.create", "create-${minecraftVersionVeryOld}").versionRef(createForge)

            def flywheel = version("flywheel", flywheelForgeVersion)
            library("flywheel", "com.jozufozu.flywheel", "flywheel-forge-${minecraftVersionVeryOld}").versionRef(flywheel)

            def jei = version("jei", jeiVersion)
            library("jei-common-api", "mezz.jei", "jei-${minecraftVersionOld}-common-api").versionRef(jei)
            library("jei-forge-api", "mezz.jei", "jei-${minecraftVersionOld}-neoforge-api").versionRef(jei)
            library("jei-forge-impl", "mezz.jei", "jei-${minecraftVersionOld}-neoforge").versionRef(jei)

            def rei = version("rei", reiVersion)
            library("rei-plugin", "me.shedaniel", "RoughlyEnoughItems-default-plugin-neoforge").versionRef(rei)
            library("rei-api", "me.shedaniel", "RoughlyEnoughItems-api-neoforge").versionRef(rei)
            library("rei-forge", "me.shedaniel", "RoughlyEnoughItems-neoforge").versionRef(rei)

            def emi = version("emi", emiVersion + "+" + minecraftVersion)
            library("emi", "dev.emi", "emi-neoforge").versionRef(emi)

            def theoneprobe = version("theoneprobe", topForgeVersion)
            library("theoneprobe", "mcjty.theoneprobe", "theoneprobe").versionRef(theoneprobe)

            def jade = version("jade", jadeForgeVersion)
            library("jade", "curse.maven", "jade-324717").versionRef(jade)

            def kubejs = version("kubejs", kjsVersion)
            library("kubejs", "dev.latvian.mods", "kubejs-neoforge").versionRef(kubejs)

            def configuration = version("configuration", configurationVersion)
            library("configuration", "dev.toma", "configuration-neoforge-${minecraftVersionOldish}").versionRef(configuration)

            def worldStripper = version("worldStripper", worldStripperForgeFile)
            library("worldStripper", "curse.maven", "worldStripper-250603").versionRef(worldStripper)

            def ae2 = version("ae2", ae2Version)
            library("ae2", "appeng", "appliedenergistics2-neoforge").versionRef(ae2)

            def au = version("au", auVersion)
            library("almostUnified-forge", "com.almostreliable.mods", "almostunified-forge").versionRef(au)
        }

        libs {
            version("quiltMappings", quiltMappingsVersion)
            version("parchment", parchmentVersion)

            version("minecraft", minecraftVersion)
            version("minecraftOld", minecraftVersionOld)
            version("minecraftVeryOld", minecraftVersionVeryOld)

            def shadow = version("shadow", shadowVersion)
            plugin("shadow", "com.github.johnrengelman.shadow").versionRef(shadow)

            def vineFlower = version("vineFlower", vineFlowerVersion)
            plugin("vineFlower", "io.github.juuxel.loom-vineflower").versionRef(vineFlower)

            def machete = version("machete", macheteVersion)
            plugin("machete", "io.github.p03w.machete").versionRef(machete)
        }
    }
}

rootProject.name = "${mod_id}"
