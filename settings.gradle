pluginManagement {
    repositories {
        maven { url = "https://maven.minecraftforge.net/" }
        maven {
            name 'Maven for PR #118' // https://github.com/neoforged/ModDevGradle/pull/118
            url 'https://prmaven.neoforged.net/ModDevGradle/pr118'
            content {
                includeModule('net.neoforged.moddev.legacy', 'net.neoforged.moddev.legacy.gradle.plugin')
                includeModule('net.neoforged.moddev', 'net.neoforged.moddev.gradle.plugin')
                includeModule('net.neoforged.moddev.repositories', 'net.neoforged.moddev.repositories.gradle.plugin')
                includeModule('net.neoforged', 'moddev-gradle')
            }
        }
        gradlePluginPortal()
    }
}

dependencyResolutionManagement {
    repositories {
        mavenCentral()
    }
    versionCatalogs {
        // Minecraft Version
        def minecraftVersion = "1.20.1"

        // Mod Dependencies Versions
        // Common
        def jeiVersion = "15.12.1.46"
        def reiVersion = "12.1.725"
        def emiVersion = "1.1.13"
        def ae2Version = "15.0.18"
        def kjsVersion = "2001.6.4-build.120"
        def architecturyVersion = "9.2.14"
        def rhinoVersion = "2001.2.3-build.6"
        def auVersion = "1.20.1-0.6.0"

        // Forge
        def forgeVersion = "47.1.47"
        def registrateForgeVersion = "MC1.20-1.3.3"
        def createForgeVersion = "0.5.1.f-33"
        def flywheelForgeVersion = "0.6.10-10"
        def topForgeVersion = "1.20.1-10.0.1-3"
        def jadeForgeVersion = "11.6.3"
        def curiosForgeVersion = "5.9.1"
        def worldStripperForgeFile = "4578579"
        def javdVersion = "4803995"
        def xaerosWorldMapVersion = "5262424" // May not actually be needed
        def xaerosMinimapVersion = "5262365"
        def journeyMapVersion = "5678927"
        def journeyMapApiVersion = "2.0.0"
        def ftbteamsForgeFile = "5267190"
        def ftblibraryForgeFile = "5567591"
        def argonautsForgeFile = "5263580"
        def resourcefulForgeFile = "5659871"

        // Libs
        def quiltMappingsVersion = "5"  // https://lambdaurora.dev/tools/import_quilt.html
        def parchmentVersion = "2023.09.03" // https://parchmentmc.org/docs/getting-started
        def shadowVersion = "7.1.2"
        def spotlessVersion = "6.25.0"
        def modDevGradleVersion = "2.0.61-beta-pr-118-legacy"
        def vineFlowerVersion = "1.+"
        def macheteVersion = "1.+"
        def configurationVersion = "2.2.0"
        def ldLibVersion = "1.0.30.a"
        def mixinextrasVersion = "0.2.0"
        def shimmerVersion = "0.2.4"
        def lombokPluginVersion = "8.7.1"

        forge {
            version("forgeShortVersion", forgeVersion)
            def minecraftForge = version("minecraftForge", "${minecraftVersion}-${forgeVersion}")
            library("minecraftForge", "net.minecraftforge", "forge").versionRef(minecraftForge)

            def ldLib = version("ldlib", ldLibVersion)
            library("ldlib-forge", "com.lowdragmc.ldlib", "ldlib-forge-${minecraftVersion}").versionRef(ldLib)

            def shimmer = version("shimmer", "${minecraftVersion}-${shimmerVersion}")
            library("shimmer-forge", "com.lowdragmc.shimmer", "Shimmer-forge").versionRef(shimmer)

            def registrate = version("registrate", registrateForgeVersion)
            library("registrate", "com.tterrag.registrate", "Registrate").versionRef(registrate)

            def createForge = version("createForge", createForgeVersion)
            library("createForge", "com.simibubi.create", "create-${minecraftVersion}").versionRef(createForge)

            def flywheel = version("flywheel", flywheelForgeVersion)
            library("flywheel", "com.jozufozu.flywheel", "flywheel-forge-${minecraftVersion}").versionRef(flywheel)

            def jei = version("jei", jeiVersion)
            library("jei-common-api", "mezz.jei", "jei-${minecraftVersion}-common-api").versionRef(jei)
            library("jei-forge-api", "mezz.jei", "jei-${minecraftVersion}-forge-api").versionRef(jei)
            library("jei-forge-impl", "mezz.jei", "jei-${minecraftVersion}-forge").versionRef(jei)

            def rei = version("rei", reiVersion)
            library("rei-plugin", "me.shedaniel", "RoughlyEnoughItems-default-plugin-forge").versionRef(rei)
            library("rei-api", "me.shedaniel", "RoughlyEnoughItems-api-forge").versionRef(rei)
            library("rei-forge", "me.shedaniel", "RoughlyEnoughItems-forge").versionRef(rei)

            def emi = version("emi", emiVersion + "+" + minecraftVersion)
            library("emi", "dev.emi", "emi-forge").versionRef(emi)

            def theoneprobe = version("theoneprobe", topForgeVersion)
            library("theoneprobe", "mcjty.theoneprobe", "theoneprobe").versionRef(theoneprobe)

            def curios = version("curios", curiosForgeVersion + "+" + minecraftVersion)
            library("curios", "top.theillusivec4.curios", "curios-forge").versionRef(curios)

            def jade = version("jade", jadeForgeVersion)
            library("jade", "maven.modrinth", "jade").versionRef(jade)

            def kubejs = version("kubejs", kjsVersion)
            library("kubejs", "dev.latvian.mods", "kubejs-forge").versionRef(kubejs)
            def architectury = version("architectury", architecturyVersion)
            library("architectury", "dev.architectury", "architectury-forge").versionRef(architectury)
            def rhino = version("rhino", rhinoVersion)
            library("rhino", "dev.latvian.mods", "rhino-forge").versionRef(rhino)

            def mixinextras = version("mixinextras", mixinextrasVersion)
            library("mixinextras-forge", "io.github.llamalad7", "mixinextras-forge").versionRef(mixinextras)

            def configuration = version("configuration", configurationVersion)
            library("configuration", "dev.toma.configuration", "configuration-forge-1.20.1").versionRef(configuration)

            def worldStripper = version("worldStripper", worldStripperForgeFile)
            library("worldStripper", "curse.maven", "worldStripper-250603").versionRef(worldStripper)

            def ae2 = version("ae2", ae2Version)
            library("ae2", "appeng", "appliedenergistics2-forge").versionRef(ae2)

            def xaerosWorldMap = version("xaerosWorldMap", xaerosWorldMapVersion)
            library("xaerosworldmap", "curse.maven", "xaeros-world-map-317780").versionRef(xaerosWorldMap)

            def xaerosMiniMap = version("xaerosMinimap", xaerosMinimapVersion)
            library("xaerosminimap", "curse.maven", "xaeros-minimap-263420").versionRef(xaerosMiniMap)

            def journeyMapApi = version("journeyMapApi", journeyMapApiVersion + "-" + minecraftVersion + "-SNAPSHOT")
            library("journeymap-api", "info.journeymap", "journeymap-api-forge").versionRef(journeyMapApi)

            def journeyMap = version("journeyMap", journeyMapVersion)
            library("journeymap-forge", "curse.maven", "journeymap-32274").versionRef(journeyMap)

            def javd = version("javd", javdVersion)
            library("javd", "curse.maven", "javd-370890").versionRef(javd)

            def ftbteams = version("ftbteams", ftbteamsForgeFile)
            library("ftbteams", "curse.maven", "ftb-teams-forge-404468").versionRef(ftbteams)

            def ftblibrary = version("ftblibrary", ftblibraryForgeFile)
            library("ftblibrary", "curse.maven", "ftb-library-forge-404465").versionRef(ftblibrary)

            def argonautslib = version("argonauts", argonautsForgeFile)
            library("argonauts", "curse.maven", "argonauts-845833").versionRef(argonautslib)

            def resourceful = version("resourceful", resourcefulForgeFile)
            library("resourceful", "curse.maven", "resourceful-lib-570073").versionRef(resourceful)
        }

        libs {
            version("quiltMappings", quiltMappingsVersion)
            version("parchment", parchmentVersion)

            def minecraft = version("minecraft", minecraftVersion)
            library("minecraft", "com.mojang", "minecraft").versionRef(minecraft)

            def shadow = version("shadow", shadowVersion)
            plugin("shadow", "com.github.johnrengelman.shadow").versionRef(shadow)

            def spotless = version("spotless", spotlessVersion)
            plugin("spotless", "com.diffplug.spotless").versionRef(spotless)

            def modDevGradle = version("modDevGradleLegacy", modDevGradleVersion)
            plugin("modDevGradle", "net.neoforged.moddev.legacy").versionRef(modDevGradle)

            def machete = version("machete", macheteVersion)
            plugin("machete", "io.github.p03w.machete").versionRef(machete)

            def lombok = version("lombok", lombokPluginVersion)
            plugin("lombok", "io.freefair.lombok").versionRef(lombok)
        }
    }
}

rootProject.name = "${mod_id}"
